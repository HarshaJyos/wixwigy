{"version":3,"file":"static/js/410.41e16c38.chunk.js","mappings":"yMAaA,SAASA,EAAcC,EAAoCC,GAAe,IAAlD,SAAEC,EAAQ,YAAEC,EAAW,OAAEC,GAAQJ,EACvD,MAAMK,EAAYC,IAChBH,EAAYG,EAAMC,OAAOC,QAG3B,OAAOJ,GAAUH,aAAwBQ,kBACvCC,EAAAA,EAAAA,MAAA,QAAMC,UAAU,iCAAgCC,SAAA,EAC9CC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,4BAA2BC,SAAC,OAC5CC,EAAAA,EAAAA,KAAA,SACEF,UAAU,8BACVH,MAAON,EACPG,SAAUA,EACVS,WAAW,EACXC,IAAKd,KAEPY,EAAAA,EAAAA,KAAA,QAAMF,UAAU,4BAA2BC,SAAC,UAG9CF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,iCAAgCC,SAAA,EAC7CC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,4BAA2BC,SAAE,UAC7CC,EAAAA,EAAAA,KAAA,YAAUF,UAAU,6BAA6BH,MAAON,EAAUG,SAAUA,EAAUU,IAAKd,KAC3FY,EAAAA,EAAAA,KAAA,QAAMF,UAAU,4BAA2BC,SAAE,WAGnD,CAEA,SAAeI,EAAAA,EAAAA,YAAWjB,G,wBCZX,SAASkB,EAAiBjB,GAAiC,IAAhC,SAAEE,EAAQ,OAAEE,EAAM,QAAEc,GAASlB,EACrE,MAAOmB,IAAUC,EAAAA,EAAAA,OACVC,EAAeC,IAAoBC,EAAAA,EAAAA,UAASrB,IAC5CsB,EAAoBC,IAAyBF,EAAAA,EAAAA,WAAS,GACvDG,GAAWC,EAAAA,EAAAA,QAAO,MAElBC,GAASC,EAAAA,EAAAA,aACZC,IACCL,GAAsB,GACtBN,EAAOY,OAAO,KACZ,MAAMC,GAAOC,EAAAA,EAAAA,IAAcf,IACvBgB,EAAAA,EAAAA,IAAgBF,KAClBA,EAAK7B,YAAYkB,GACbS,GACFE,EAAKG,WAAW,EAAG,OAK3B,CAAChB,EAAQE,EAAeH,IAmD1B,OAhDAkB,EAAAA,EAAAA,WAAU,KACHZ,GAAsBH,IAAkBnB,GAC3CoB,EAAiBpB,IAElB,CAACsB,EAAoBtB,EAAUmB,KAElCe,EAAAA,EAAAA,WAAU,IACJZ,GACKa,EAAAA,EAAAA,IACLlB,EAAOmB,gBACLC,EAAAA,GACCC,IACC,MAAMC,EAAgBC,SAASD,cAK/B,OAJkBf,EAASiB,UACTF,GAChBb,KAEK,GAETgB,EAAAA,IAEFzB,EAAOmB,gBACLO,EAAAA,GACCL,IACC,MAAMC,EAAgBC,SAASD,cAE/B,OADkBf,EAASiB,UACTF,IAChBb,GAAO,IACA,IAIXgB,EAAAA,KAIGzB,EAAO2B,uBAAuBC,IAAsB,IAArB,YAAEC,GAAaD,EAChCC,EAAYC,KAAK,KAClC,MAAMC,GAAYC,EAAAA,EAAAA,MAClB,OAAOC,EAAAA,EAAAA,IAAiBF,IAAcA,EAAUG,IAAInC,IAA4C,IAAhCgC,EAAUI,WAAWC,UAGrF9B,GAAsB,KAI3B,CAACN,EAAQD,EAASU,EAAQJ,KAG3BX,EAAAA,EAAAA,KAAA2C,EAAAA,SAAA,CAAA5C,SACGY,GACCX,EAAAA,EAAAA,KAACd,EAAc,CAACG,SAAUmB,EAAelB,YAAamB,EAAkBlB,OAAQA,EAAQW,IAAKW,KAE7Fb,EAAAA,EAAAA,KAAC4C,EAAAA,GAAa,CAACC,QAAUC,GAAMxC,EAAOyC,SAASD,GAAIE,SAAU,KAAKjD,UAChEC,EAAAA,EAAAA,KAACiD,EAAAA,EAAa,CAAC5D,SAAUmB,EAAejB,OAAQA,EAAQ2D,cAAeA,IAAMtC,GAAsB,QAK7G,C","sources":["lexical/ui/EquationEditor.jsx","lexical/nodes/EquationComponent.jsx"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nimport './EquationEditor.css';\n\nimport * as React from 'react';\nimport { ChangeEvent, forwardRef } from 'react';\n\nfunction EquationEditor({ equation, setEquation, inline }, forwardedRef) {\n  const onChange = (event) => {\n    setEquation(event.target.value);\n  };\n\n  return inline && forwardedRef instanceof HTMLInputElement ? (\n    <span className=\"EquationEditor_inputBackground\">\n      <span className=\"EquationEditor_dollarSign\">$</span>\n      <input\n        className=\"EquationEditor_inlineEditor\"\n        value={equation}\n        onChange={onChange}\n        autoFocus={true}\n        ref={forwardedRef}\n      />\n      <span className=\"EquationEditor_dollarSign\">$</span>\n    </span>\n  ) : (\n    <div className=\"EquationEditor_inputBackground\">\n      <span className=\"EquationEditor_dollarSign\">{'$$\\n'}</span>\n      <textarea className=\"EquationEditor_blockEditor\" value={equation} onChange={onChange} ref={forwardedRef} />\n      <span className=\"EquationEditor_dollarSign\">{'\\n$$'}</span>\n    </div>\n  );\n}\n\nexport default forwardRef(EquationEditor);\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nimport { useLexicalComposerContext } from '@lexical/react/LexicalComposerContext';\nimport { mergeRegister } from '@lexical/utils';\nimport {\n  $getNodeByKey,\n  $getSelection,\n  $isNodeSelection,\n  COMMAND_PRIORITY_HIGH,\n  KEY_ESCAPE_COMMAND,\n  NodeKey,\n  SELECTION_CHANGE_COMMAND,\n} from 'lexical';\nimport * as React from 'react';\nimport { useCallback, useEffect, useRef, useState } from 'react';\nimport { ErrorBoundary } from 'react-error-boundary';\n\nimport EquationEditor from '../ui/EquationEditor';\nimport KatexRenderer from '../ui/KatexRenderer';\nimport { $isEquationNode } from './EquationNode';\n\nexport default function EquationComponent({ equation, inline, nodeKey }) {\n  const [editor] = useLexicalComposerContext();\n  const [equationValue, setEquationValue] = useState(equation);\n  const [showEquationEditor, setShowEquationEditor] = useState(false);\n  const inputRef = useRef(null);\n\n  const onHide = useCallback(\n    (restoreSelection) => {\n      setShowEquationEditor(false);\n      editor.update(() => {\n        const node = $getNodeByKey(nodeKey);\n        if ($isEquationNode(node)) {\n          node.setEquation(equationValue);\n          if (restoreSelection) {\n            node.selectNext(0, 0);\n          }\n        }\n      });\n    },\n    [editor, equationValue, nodeKey]\n  );\n\n  useEffect(() => {\n    if (!showEquationEditor && equationValue !== equation) {\n      setEquationValue(equation);\n    }\n  }, [showEquationEditor, equation, equationValue]);\n\n  useEffect(() => {\n    if (showEquationEditor) {\n      return mergeRegister(\n        editor.registerCommand(\n          SELECTION_CHANGE_COMMAND,\n          (payload) => {\n            const activeElement = document.activeElement;\n            const inputElem = inputRef.current;\n            if (inputElem !== activeElement) {\n              onHide();\n            }\n            return false;\n          },\n          COMMAND_PRIORITY_HIGH\n        ),\n        editor.registerCommand(\n          KEY_ESCAPE_COMMAND,\n          (payload) => {\n            const activeElement = document.activeElement;\n            const inputElem = inputRef.current;\n            if (inputElem === activeElement) {\n              onHide(true);\n              return true;\n            }\n            return false;\n          },\n          COMMAND_PRIORITY_HIGH\n        )\n      );\n    } else {\n      return editor.registerUpdateListener(({ editorState }) => {\n        const isSelected = editorState.read(() => {\n          const selection = $getSelection();\n          return $isNodeSelection(selection) && selection.has(nodeKey) && selection.getNodes().length === 1;\n        });\n        if (isSelected) {\n          setShowEquationEditor(true);\n        }\n      });\n    }\n  }, [editor, nodeKey, onHide, showEquationEditor]);\n\n  return (\n    <>\n      {showEquationEditor ? (\n        <EquationEditor equation={equationValue} setEquation={setEquationValue} inline={inline} ref={inputRef} />\n      ) : (\n        <ErrorBoundary onError={(e) => editor._onError(e)} fallback={null}>\n          <KatexRenderer equation={equationValue} inline={inline} onDoubleClick={() => setShowEquationEditor(true)} />\n        </ErrorBoundary>\n      )}\n    </>\n  );\n}\n"],"names":["EquationEditor","_ref","forwardedRef","equation","setEquation","inline","onChange","event","target","value","HTMLInputElement","_jsxs","className","children","_jsx","autoFocus","ref","forwardRef","EquationComponent","nodeKey","editor","useLexicalComposerContext","equationValue","setEquationValue","useState","showEquationEditor","setShowEquationEditor","inputRef","useRef","onHide","useCallback","restoreSelection","update","node","$getNodeByKey","$isEquationNode","selectNext","useEffect","mergeRegister","registerCommand","SELECTION_CHANGE_COMMAND","payload","activeElement","document","current","COMMAND_PRIORITY_HIGH","KEY_ESCAPE_COMMAND","registerUpdateListener","_ref2","editorState","read","selection","$getSelection","$isNodeSelection","has","getNodes","length","_Fragment","ErrorBoundary","onError","e","_onError","fallback","KatexRenderer","onDoubleClick"],"sourceRoot":""}