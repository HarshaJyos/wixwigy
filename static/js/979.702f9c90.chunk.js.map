{"version":3,"file":"static/js/979.702f9c90.chunk.js","mappings":"kXA6CA,MAAMA,EAAa,IAAIC,IAevB,SAASC,EAASC,GAAkE,IAAjE,QAAEC,EAAO,UAAEC,EAAS,SAAEC,EAAQ,IAAEC,EAAG,MAAEC,EAAK,OAAEC,EAAM,SAAEC,GAAUP,EAE/E,OAfF,SAA0BI,GACxB,IAAKP,EAAWW,IAAIJ,GAClB,MAAM,IAAIK,QAASC,IACjB,MAAMC,EAAM,IAAIC,MAChBD,EAAIP,IAAMA,EACVO,EAAIE,OAAS,KACXhB,EAAWiB,IAAIV,GACfM,EAAQ,QAIhB,CAGEK,CAAiBX,IAEfY,EAAAA,EAAAA,KAAA,OACEd,UAAWA,QAAae,EACxBb,IAAKA,EACLc,IAAKjB,EACLkB,IAAKhB,EACL,gBAAeI,EACfa,MAAO,CACLC,QAAS,QACTf,SACAD,SAEFiB,UAAU,SAGhB,CAEO,SAASC,EAAuBC,GAAsC,IAArC,aAAEC,EAAY,QAAEC,EAAO,QAAEC,GAASH,EACxE,MACMI,EADcH,EAAaI,iBACRC,KAAK,KAAMC,EAAAA,EAAAA,IAAcL,KAC3CzB,EAAS+B,IAAcC,EAAAA,EAAAA,UAASL,EAAKM,eACrCC,EAAaC,IAAkBH,EAAAA,EAAAA,UAASL,EAAKS,mBAC7C9B,EAAU+B,IAAeL,EAAAA,EAAAA,UAASL,EAAKW,eAoB9C,OACEC,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACE1B,EAAAA,EAAAA,KAAA,OAAKI,MAAO,CAAEuB,aAAc,OAAQD,UAClC1B,EAAAA,EAAAA,KAAC4B,EAAAA,EAAS,CACRC,MAAM,WACNC,YAAY,+BACZC,SAAUf,EACVgB,MAAO/C,EACP,eAAa,kCAIjBuC,EAAAA,EAAAA,MAACS,EAAAA,EAAM,CACL7B,MAAO,CAAEuB,aAAc,MAAOtC,MAAO,SACrC2C,MAAOzC,EACPsC,MAAM,WACNK,KAAK,WACLC,GAAG,kBACHJ,SAhCwBK,IAC5Bd,EAAYc,EAAEC,OAAOL,QA+BcN,SAAA,EAE/B1B,EAAAA,EAAAA,KAAA,UAAQgC,MAAM,OAAMN,SAAC,UACrB1B,EAAAA,EAAAA,KAAA,UAAQgC,MAAM,QAAON,SAAC,WACtB1B,EAAAA,EAAAA,KAAA,UAAQgC,MAAM,OAAMN,SAAC,mBAGvBF,EAAAA,EAAAA,MAAA,OAAKtC,UAAU,iBAAgBwC,SAAA,EAC7B1B,EAAAA,EAAAA,KAAA,SAAOmC,GAAG,UAAUG,KAAK,WAAWC,QAASpB,EAAaY,SA5C/BK,IAC/BhB,EAAegB,EAAEC,OAAOE,aA4CpBvC,EAAAA,EAAAA,KAAA,SAAOwC,QAAQ,UAASd,SAAC,qBAG3B1B,EAAAA,EAAAA,KAACyC,EAAAA,EAAa,CAAAf,UACZ1B,EAAAA,EAAAA,KAAC0C,EAAAA,EAAM,CAAC,eAAa,8BAA8BC,QAASA,IAzC1CC,MACtB,MAAMC,EAAU,CAAE5D,UAASM,WAAU4B,eACjCP,GACFH,EAAaqC,OAAO,KAClBlC,EAAKkC,OAAOD,KAGhBlC,KAkCsEiC,GAAkBlB,SAAC,gBAM7F,CAEe,SAASqB,EAAoBC,GAA4E,IAA3E,IAAE5D,EAAG,QAAEH,EAAO,QAAEyB,EAAO,MAAErB,EAAK,OAAEC,EAAM,YAAE6B,EAAW,QAAE8B,EAAO,SAAE1D,GAAUyD,EACnH,MAAOE,EAAOC,IAAaC,EAAAA,EAAAA,KACrBjE,GAAWkE,EAAAA,EAAAA,QAAO,MAClBC,GAAYD,EAAAA,EAAAA,QAAO,OAClBE,EAAYC,EAAaC,IAAkBC,EAAAA,EAAAA,GAAwBhD,IACnEiD,IAAUC,EAAAA,EAAAA,OACVC,EAAWC,IAAgB7C,EAAAA,EAAAA,UAAS,MACrC8C,GAAkBV,EAAAA,EAAAA,QAAO,MAEzBW,GAAWC,EAAAA,EAAAA,aACdpB,IACC,GAAIU,IAAcW,EAAAA,EAAAA,KAAiBC,EAAAA,EAAAA,OAAkB,CACrCtB,EACRuB,iBACN,MAAMxD,GAAOG,EAAAA,EAAAA,IAAcL,IACvB2D,EAAAA,EAAAA,IAAmBzD,IACrBA,EAAK0D,QAET,CACA,OAAO,GAET,CAACf,EAAY7C,IAGT6D,GAAUN,EAAAA,EAAAA,aACbO,IACC,MAAMC,GAAkBN,EAAAA,EAAAA,MAClBO,EAAapB,EAAUqB,QAC7B,GAAIpB,IAAcW,EAAAA,EAAAA,IAAiBO,IAA0D,IAAtCA,EAAgBG,WAAWC,OAAc,CAC9F,GAAI1D,EAKF,OAHA2D,EAAAA,EAAAA,IAAc,MACdN,EAAMJ,iBACNnB,EAAQ8B,SACD,EACF,GAAmB,OAAfL,GAAuBA,IAAeM,SAASC,cAGxD,OAFAT,EAAMJ,iBACNM,EAAWK,SACJ,CAEX,CACA,OAAO,GAET,CAAC9B,EAASM,EAAYpC,IAGlB+D,GAAWjB,EAAAA,EAAAA,aACdO,IACKT,EAAgBY,UAAY1B,GAAWK,EAAUqB,UAAYH,EAAMnC,WACrEyC,EAAAA,EAAAA,IAAc,MACdnB,EAAOb,OAAO,KACZU,GAAY,GACZ,MAAM2B,EAAoBxB,EAAOyB,iBACP,OAAtBD,GACFA,EAAkBJ,WAGf,GAIX,CAAC9B,EAASU,EAAQH,KAGpB6B,EAAAA,EAAAA,WAAU,KACR,IAAIC,GAAY,EAChB,MAAMC,GAAaC,EAAAA,EAAAA,IACjB7B,EAAO8B,uBAAuBC,IAAsB,IAArB,YAAEC,GAAaD,EACxCJ,GACFxB,EAAa6B,EAAY7E,KAAK,KAAMqD,EAAAA,EAAAA,UAGxCR,EAAOiC,gBACLC,EAAAA,GACA,CAACC,EAAGrF,KACFsD,EAAgBY,QAAUlE,GACnB,GAETsF,EAAAA,IAEFpC,EAAOiC,gBACLI,EAAAA,GACCnD,IACC,MAAM2B,EAAQ3B,EACd,OAAI2B,EAAMnC,SAAWlD,EAASwF,UACxBH,EAAMyB,SACRzC,GAAaD,IAEbE,IACAD,GAAY,KAEP,IAKXuC,EAAAA,IAEFpC,EAAOiC,gBACLM,EAAAA,GACC1B,GACKA,EAAMnC,SAAWlD,EAASwF,UAG5BH,EAAMJ,kBACC,GAIX2B,EAAAA,IAEFpC,EAAOiC,gBAAgBO,EAAAA,GAAoBnC,EAAU+B,EAAAA,IACrDpC,EAAOiC,gBAAgBQ,EAAAA,GAAuBpC,EAAU+B,EAAAA,IACxDpC,EAAOiC,gBAAgBS,EAAAA,GAAmB9B,EAASwB,EAAAA,IACnDpC,EAAOiC,gBAAgBU,EAAAA,GAAoBpB,EAAUa,EAAAA,KAEvD,MAAO,KACLT,GAAY,EACZC,MAED,CAAC9B,EAAgBE,EAAQJ,EAAY7C,EAASsD,EAAUO,EAASW,EAAU1B,IAE9E,MAAMlD,EAAYiD,IAAcW,EAAAA,EAAAA,IAAiBL,GAC3C0C,EAAYhD,EAClB,OACE/B,EAAAA,EAAAA,MAACgF,EAAAA,SAAQ,CAACC,SAAU,KAAK/E,SAAA,EACvBF,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEF,EAAAA,EAAAA,MAAA,OAAKlB,UAAWA,EAAUoB,SAAA,EACxB1B,EAAAA,EAAAA,KAAA,UACEd,UAAU,oBACViB,IAAKmD,EACLX,QAASA,KACPQ,EAAU,sBAAwBxC,IAChCX,EAAAA,EAAAA,KAACO,EAAuB,CAACE,aAAckD,EAAQjD,QAASA,EAASC,QAASA,MAE5Ee,SACH,UAGD1B,EAAAA,EAAAA,KAACjB,EAAS,CACRG,UAAWqH,EAAY,aAAWrC,EAAAA,EAAAA,IAAiBL,GAAa,YAAc,IAAO,KACrFzE,IAAKA,EACLH,QAASA,EACTE,SAAUA,EACVE,MAAOA,EACPC,OAAQA,EACRC,SAAUA,OAGb4B,IACCnB,EAAAA,EAAAA,KAAA,OAAKd,UAAU,0BAAyBwC,UACtCF,EAAAA,EAAAA,MAACkF,EAAAA,EAAqB,CAACC,cAAe1D,EAAQvB,SAAA,EAC5C1B,EAAAA,EAAAA,KAAC4G,EAAAA,EAAe,KAChB5G,EAAAA,EAAAA,KAAC6G,EAAAA,EAAU,KACX7G,EAAAA,EAAAA,KAAC8G,EAAAA,EAA+B,KAChC9G,EAAAA,EAAAA,KAAC+G,EAAAA,EAAc,CACbC,iBAAiBhH,EAAAA,EAAAA,KAACiH,EAAAA,EAAe,CAAC/H,UAAU,qCAC5C4C,aAAa9B,EAAAA,EAAAA,KAACkH,EAAAA,EAAW,CAAChI,UAAU,+BAA8BwC,SAAC,uBACnEyF,cAAeC,EAAAA,+BAMxBlE,IAGP,C,6EC9S6Z,IAAzFd,EAA6FiF,GAA7FjF,EAAkG,SAASA,GAAG,MAAMkF,EAAE,IAAIC,gBAAgBD,EAAEE,OAAO,OAAOpF,GAAG,IAAI,IAAIA,EAAE,EAAEA,EAAEqF,UAAU5C,OAAOzC,IAAIkF,EAAEE,OAAO,IAAIC,UAAUrF,IAAI,MAAMsF,MAAM,2BAA2BtF,2CAA2CkF,kHAAkH,IAAlZlF,EAAEuF,YAAYC,OAAOC,UAAUC,eAAeC,KAAK3F,EAAE,WAAWA,EAAE4F,QAAQ5F,EAA4U,SAAS6F,EAAE7F,GAAG,MAAMkF,EAAElF,EAAE8F,YAAY,OAAO,OAAOZ,EAAE,IAAIxI,IAAI,CAACwI,IAAI,IAAIxI,GAAG,CAAC,SAASqJ,EAACnJ,GAA+E,IAA7E2H,cAAcyB,EAAE1G,SAASyG,EAAEE,aAAaC,EAAEC,aAAaC,EAAEC,iBAAiBC,GAAE1J,EAAE,MAAM2J,GAAEC,EAAAA,EAAAA,SAAE,GAAIC,GAAEC,EAAAA,EAAAA,YAAExB,EAAAA,IAAG,MAAMuB,GAAGxB,EAAE,GAAG,MAAMvB,GAAGiD,SAASC,IAAIH,EAAEI,GAAEC,EAAAA,EAAAA,SAAG,KAAK,MAAM9G,EAAEoG,GAAGQ,UAAK,EAAO1B,GAAE6B,EAAAA,EAAAA,IAAEN,EAAEzG,GAAG,QAAG,IAASA,IAAIgG,EAAEgB,QAAQC,MAAMjH,GAAGgG,EAAEkB,cAAcxD,EAAEwC,EAAE,IAAI,IAAIlG,KAAKkG,EAAE,CAAC,IAAIhB,EAAE,KAAK6B,EAAE,KAAK,GAAG,mBAAmB/G,EAAE,CAAC,MAAMwG,EAAExG,EAAEA,EAAEwG,EAAEW,QAAQjC,EAAEsB,EAAEY,KAAKL,EAAEP,EAAEa,WAAW,IAAI,CAAC,MAAMb,EAAER,EAAEsB,OAAOC,IAAIvH,EAAEwH,WAAWxB,EAAEsB,OAAOG,IAAIzH,EAAEwH,UAAU,CAACE,UAAUlB,EAAEA,EAAEkB,eAAU,EAAOC,MAAM3H,EAAEmH,QAAQjC,EAAE0C,iBAAiBb,EAAEc,WAAWhC,EAAE7F,IAAI,KAAK,CAAC,MAAMA,EAAEgG,EAAEsB,OAAO,IAAIQ,IAAIpE,EAAE4D,QAAQ,IAAI,MAAMpC,EAAE6B,KAAK/G,EAAEgG,EAAEsB,OAAOG,IAAIvC,EAAE,CAACwC,UAAUX,EAAEW,UAAUC,MAAMZ,EAAEY,MAAMR,QAAQJ,EAAEI,QAAQS,iBAAiBb,EAAEa,iBAAiBC,WAAWhC,EAAEkB,EAAEY,QAAQ,CAAC,OAAO3B,EAAEgB,QAAQe,UAAUrE,EAAEsD,QAAQe,UAAU/B,EAAEgC,UAAUtE,EAAEsE,UAAU,CAAChC,EAAEd,IAAK,KAAK+C,eAAeC,EAAEC,UAAUC,IAAGpI,EAAAA,EAAAA,KAAIqI,EAAE/B,GAAGC,EAAEhE,SAAS6F,EAAEhL,IAAI4I,EAAEsC,UAAU,OAAOC,EAAAA,EAAAA,WAAG,KAAKF,IAAI9B,EAAEhE,SAAQ,IAAM,CAAC8F,KAAIE,EAAAA,EAAAA,WAAG,IAAI7E,EAAE8E,yBAA0BxI,IAAIgG,EAAEyC,YAAYzI,KAAO,CAACgG,EAAEtC,KAAIgF,EAAAA,EAAAA,KAAExD,EAAAA,GAAEyD,SAAS,CAAC/I,MAAMiH,EAAEvH,UAAU4I,GAAGG,EAAEtC,EAAE,MAAM,C","sources":["lexical/nodes/InlineImageComponent.jsx","../node_modules/@lexical/react/LexicalNestedComposer.prod.mjs"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nimport './InlineImageNode.css';\n\nimport { AutoFocusPlugin } from '@lexical/react/LexicalAutoFocusPlugin';\nimport { useLexicalComposerContext } from '@lexical/react/LexicalComposerContext';\nimport { LexicalErrorBoundary } from '@lexical/react/LexicalErrorBoundary';\nimport { LexicalNestedComposer } from '@lexical/react/LexicalNestedComposer';\nimport { RichTextPlugin } from '@lexical/react/LexicalRichTextPlugin';\nimport { useLexicalNodeSelection } from '@lexical/react/useLexicalNodeSelection';\nimport { mergeRegister } from '@lexical/utils';\nimport {\n  $getNodeByKey,\n  $getSelection,\n  $isNodeSelection,\n  $setSelection,\n  CLICK_COMMAND,\n  COMMAND_PRIORITY_LOW,\n  DRAGSTART_COMMAND,\n  KEY_BACKSPACE_COMMAND,\n  KEY_DELETE_COMMAND,\n  KEY_ENTER_COMMAND,\n  KEY_ESCAPE_COMMAND,\n  SELECTION_CHANGE_COMMAND,\n} from 'lexical';\nimport * as React from 'react';\nimport { Suspense, useCallback, useEffect, useRef, useState } from 'react';\n\nimport useModal from '../hooks/useModal';\nimport FloatingTextFormatToolbarPlugin from '../plugins/FloatingTextFormatToolbarPlugin/index';\nimport LinkPlugin from '../plugins/LinkPlugin';\nimport Button from '../ui/Button';\nimport ContentEditable from '../ui/ContentEditable';\nimport { DialogActions } from '../ui/Dialog';\nimport Placeholder from '../ui/Placeholder';\nimport Select from '../ui/Select';\nimport TextInput from '../ui/TextInput';\nimport { $isInlineImageNode, InlineImageNode } from './InlineImageNode';\n\nconst imageCache = new Set();\n\nfunction useSuspenseImage(src) {\n  if (!imageCache.has(src)) {\n    throw new Promise((resolve) => {\n      const img = new Image();\n      img.src = src;\n      img.onload = () => {\n        imageCache.add(src);\n        resolve(null);\n      };\n    });\n  }\n}\n\nfunction LazyImage({ altText, className, imageRef, src, width, height, position }) {\n  useSuspenseImage(src);\n  return (\n    <img\n      className={className || undefined}\n      src={src}\n      alt={altText}\n      ref={imageRef}\n      data-position={position}\n      style={{\n        display: 'block',\n        height,\n        width,\n      }}\n      draggable=\"false\"\n    />\n  );\n}\n\nexport function UpdateInlineImageDialog({ activeEditor, nodeKey, onClose }) {\n  const editorState = activeEditor.getEditorState();\n  const node = editorState.read(() => $getNodeByKey(nodeKey));\n  const [altText, setAltText] = useState(node.getAltText());\n  const [showCaption, setShowCaption] = useState(node.getShowCaption());\n  const [position, setPosition] = useState(node.getPosition());\n\n  const handleShowCaptionChange = (e) => {\n    setShowCaption(e.target.checked);\n  };\n\n  const handlePositionChange = (e) => {\n    setPosition(e.target.value);\n  };\n\n  const handleOnConfirm = () => {\n    const payload = { altText, position, showCaption };\n    if (node) {\n      activeEditor.update(() => {\n        node.update(payload);\n      });\n    }\n    onClose();\n  };\n\n  return (\n    <>\n      <div style={{ marginBottom: '1em' }}>\n        <TextInput\n          label=\"Alt Text\"\n          placeholder=\"Descriptive alternative text\"\n          onChange={setAltText}\n          value={altText}\n          data-test-id=\"image-modal-alt-text-input\"\n        />\n      </div>\n\n      <Select\n        style={{ marginBottom: '1em', width: '208px' }}\n        value={position}\n        label=\"Position\"\n        name=\"position\"\n        id=\"position-select\"\n        onChange={handlePositionChange}\n      >\n        <option value=\"left\">Left</option>\n        <option value=\"right\">Right</option>\n        <option value=\"full\">Full Width</option>\n      </Select>\n\n      <div className=\"Input__wrapper\">\n        <input id=\"caption\" type=\"checkbox\" checked={showCaption} onChange={handleShowCaptionChange} />\n        <label htmlFor=\"caption\">Show Caption</label>\n      </div>\n\n      <DialogActions>\n        <Button data-test-id=\"image-modal-file-upload-btn\" onClick={() => handleOnConfirm()}>\n          Confirm\n        </Button>\n      </DialogActions>\n    </>\n  );\n}\n\nexport default function InlineImageComponent({ src, altText, nodeKey, width, height, showCaption, caption, position }) {\n  const [modal, showModal] = useModal();\n  const imageRef = useRef(null);\n  const buttonRef = useRef(null);\n  const [isSelected, setSelected, clearSelection] = useLexicalNodeSelection(nodeKey);\n  const [editor] = useLexicalComposerContext();\n  const [selection, setSelection] = useState(null);\n  const activeEditorRef = useRef(null);\n\n  const onDelete = useCallback(\n    (payload) => {\n      if (isSelected && $isNodeSelection($getSelection())) {\n        const event = payload;\n        event.preventDefault();\n        const node = $getNodeByKey(nodeKey);\n        if ($isInlineImageNode(node)) {\n          node.remove();\n        }\n      }\n      return false;\n    },\n    [isSelected, nodeKey]\n  );\n\n  const onEnter = useCallback(\n    (event) => {\n      const latestSelection = $getSelection();\n      const buttonElem = buttonRef.current;\n      if (isSelected && $isNodeSelection(latestSelection) && latestSelection.getNodes().length === 1) {\n        if (showCaption) {\n          // Move focus into nested editor\n          $setSelection(null);\n          event.preventDefault();\n          caption.focus();\n          return true;\n        } else if (buttonElem !== null && buttonElem !== document.activeElement) {\n          event.preventDefault();\n          buttonElem.focus();\n          return true;\n        }\n      }\n      return false;\n    },\n    [caption, isSelected, showCaption]\n  );\n\n  const onEscape = useCallback(\n    (event) => {\n      if (activeEditorRef.current === caption || buttonRef.current === event.target) {\n        $setSelection(null);\n        editor.update(() => {\n          setSelected(true);\n          const parentRootElement = editor.getRootElement();\n          if (parentRootElement !== null) {\n            parentRootElement.focus();\n          }\n        });\n        return true;\n      }\n      return false;\n    },\n    [caption, editor, setSelected]\n  );\n\n  useEffect(() => {\n    let isMounted = true;\n    const unregister = mergeRegister(\n      editor.registerUpdateListener(({ editorState }) => {\n        if (isMounted) {\n          setSelection(editorState.read(() => $getSelection()));\n        }\n      }),\n      editor.registerCommand(\n        SELECTION_CHANGE_COMMAND,\n        (_, activeEditor) => {\n          activeEditorRef.current = activeEditor;\n          return false;\n        },\n        COMMAND_PRIORITY_LOW\n      ),\n      editor.registerCommand(\n        CLICK_COMMAND,\n        (payload) => {\n          const event = payload;\n          if (event.target === imageRef.current) {\n            if (event.shiftKey) {\n              setSelected(!isSelected);\n            } else {\n              clearSelection();\n              setSelected(true);\n            }\n            return true;\n          }\n\n          return false;\n        },\n        COMMAND_PRIORITY_LOW\n      ),\n      editor.registerCommand(\n        DRAGSTART_COMMAND,\n        (event) => {\n          if (event.target === imageRef.current) {\n            // TODO This is just a temporary workaround for FF to behave like other browsers.\n            // Ideally, this handles drag & drop too (and all browsers).\n            event.preventDefault();\n            return true;\n          }\n          return false;\n        },\n        COMMAND_PRIORITY_LOW\n      ),\n      editor.registerCommand(KEY_DELETE_COMMAND, onDelete, COMMAND_PRIORITY_LOW),\n      editor.registerCommand(KEY_BACKSPACE_COMMAND, onDelete, COMMAND_PRIORITY_LOW),\n      editor.registerCommand(KEY_ENTER_COMMAND, onEnter, COMMAND_PRIORITY_LOW),\n      editor.registerCommand(KEY_ESCAPE_COMMAND, onEscape, COMMAND_PRIORITY_LOW)\n    );\n    return () => {\n      isMounted = false;\n      unregister();\n    };\n  }, [clearSelection, editor, isSelected, nodeKey, onDelete, onEnter, onEscape, setSelected]);\n\n  const draggable = isSelected && $isNodeSelection(selection);\n  const isFocused = isSelected;\n  return (\n    <Suspense fallback={null}>\n      <>\n        <div draggable={draggable}>\n          <button\n            className=\"image-edit-button\"\n            ref={buttonRef}\n            onClick={() => {\n              showModal('Update Inline Image', (onClose) => (\n                <UpdateInlineImageDialog activeEditor={editor} nodeKey={nodeKey} onClose={onClose} />\n              ));\n            }}\n          >\n            Edit\n          </button>\n          <LazyImage\n            className={isFocused ? `focused ${$isNodeSelection(selection) ? 'draggable' : ''}` : null}\n            src={src}\n            altText={altText}\n            imageRef={imageRef}\n            width={width}\n            height={height}\n            position={position}\n          />\n        </div>\n        {showCaption && (\n          <div className=\"image-caption-container\">\n            <LexicalNestedComposer initialEditor={caption}>\n              <AutoFocusPlugin />\n              <LinkPlugin />\n              <FloatingTextFormatToolbarPlugin />\n              <RichTextPlugin\n                contentEditable={<ContentEditable className=\"InlineImageNode__contentEditable\" />}\n                placeholder={<Placeholder className=\"InlineImageNode__placeholder\">Enter a caption...</Placeholder>}\n                ErrorBoundary={LexicalErrorBoundary}\n              />\n            </LexicalNestedComposer>\n          </div>\n        )}\n      </>\n      {modal}\n    </Suspense>\n  );\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nimport{useCollaborationContext as e}from\"@lexical/react/LexicalCollaborationContext\";import{LexicalComposerContext as t,createLexicalComposerContext as r}from\"@lexical/react/LexicalComposerContext\";import{useRef as o,useContext as n,useMemo as l,useEffect as i}from\"react\";import{jsx as a}from\"react/jsx-runtime\";function s(e){return e&&e.__esModule&&Object.prototype.hasOwnProperty.call(e,\"default\")?e.default:e}var c=s((function(e){const t=new URLSearchParams;t.append(\"code\",e);for(let e=1;e<arguments.length;e++)t.append(\"v\",arguments[e]);throw Error(`Minified Lexical error #${e}; visit https://lexical.dev/docs/error?${t} for the full message or use the non-minified dev environment for full errors and additional helpful warnings.`)}));function p(e){const t=e.transform();return null!==t?new Set([t]):new Set}function d({initialEditor:s,children:d,initialNodes:f,initialTheme:u,skipCollabChecks:m}){const h=o(!1),x=n(t);null==x&&c(9);const[_,{getTheme:g}]=x,v=l((()=>{const e=u||g()||void 0,t=r(x,e);if(void 0!==e&&(s._config.theme=e),s._parentEditor=_,f)for(let e of f){let t=null,r=null;if(\"function\"!=typeof e){const o=e;e=o.replace,t=o.with,r=o.withKlass||null}const o=s._nodes.get(e.getType());s._nodes.set(e.getType(),{exportDOM:o?o.exportDOM:void 0,klass:e,replace:t,replaceWithKlass:r,transforms:p(e)})}else{const e=s._nodes=new Map(_._nodes);for(const[t,r]of e)s._nodes.set(t,{exportDOM:r.exportDOM,klass:r.klass,replace:r.replace,replaceWithKlass:r.replaceWithKlass,transforms:p(r.klass)})}return s._config.namespace=_._config.namespace,s._editable=_._editable,[s,t]}),[]),{isCollabActive:w,yjsDocMap:b}=e(),M=m||h.current||b.has(s.getKey());return i((()=>{M&&(h.current=!0)}),[M]),i((()=>_.registerEditableListener((e=>{s.setEditable(e)}))),[s,_]),a(t.Provider,{value:v,children:!w||M?d:null})}export{d as LexicalNestedComposer};\n"],"names":["imageCache","Set","LazyImage","_ref","altText","className","imageRef","src","width","height","position","has","Promise","resolve","img","Image","onload","add","useSuspenseImage","_jsx","undefined","alt","ref","style","display","draggable","UpdateInlineImageDialog","_ref2","activeEditor","nodeKey","onClose","node","getEditorState","read","$getNodeByKey","setAltText","useState","getAltText","showCaption","setShowCaption","getShowCaption","setPosition","getPosition","_jsxs","_Fragment","children","marginBottom","TextInput","label","placeholder","onChange","value","Select","name","id","e","target","type","checked","htmlFor","DialogActions","Button","onClick","handleOnConfirm","payload","update","InlineImageComponent","_ref3","caption","modal","showModal","useModal","useRef","buttonRef","isSelected","setSelected","clearSelection","useLexicalNodeSelection","editor","useLexicalComposerContext","selection","setSelection","activeEditorRef","onDelete","useCallback","$isNodeSelection","$getSelection","preventDefault","$isInlineImageNode","remove","onEnter","event","latestSelection","buttonElem","current","getNodes","length","$setSelection","focus","document","activeElement","onEscape","parentRootElement","getRootElement","useEffect","isMounted","unregister","mergeRegister","registerUpdateListener","_ref4","editorState","registerCommand","SELECTION_CHANGE_COMMAND","_","COMMAND_PRIORITY_LOW","CLICK_COMMAND","shiftKey","DRAGSTART_COMMAND","KEY_DELETE_COMMAND","KEY_BACKSPACE_COMMAND","KEY_ENTER_COMMAND","KEY_ESCAPE_COMMAND","isFocused","Suspense","fallback","LexicalNestedComposer","initialEditor","AutoFocusPlugin","LinkPlugin","FloatingTextFormatToolbarPlugin","RichTextPlugin","contentEditable","ContentEditable","Placeholder","ErrorBoundary","LexicalErrorBoundary","c","t","URLSearchParams","append","arguments","Error","__esModule","Object","prototype","hasOwnProperty","call","default","p","transform","d","s","initialNodes","f","initialTheme","u","skipCollabChecks","m","h","o","x","n","getTheme","g","v","l","r","_config","theme","_parentEditor","replace","with","withKlass","_nodes","get","getType","set","exportDOM","klass","replaceWithKlass","transforms","Map","namespace","_editable","isCollabActive","w","yjsDocMap","b","M","getKey","i","registerEditableListener","setEditable","a","Provider"],"sourceRoot":""}