{"version":3,"file":"static/js/157.f2b3b8fb.chunk.js","mappings":"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","sources":["lexical/nodes/ExcalidrawNode/ExcalidrawImage.jsx","lexical/nodes/ExcalidrawNode/ExcalidrawModal.jsx","lexical/nodes/ExcalidrawNode/ExcalidrawComponent.jsx","lexical/ui/ImageResizer.jsx"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nimport { exportToSvg } from '@excalidraw/excalidraw';\nimport * as React from 'react';\nimport { useEffect, useState } from 'react';\n\n// exportToSvg has fonts from excalidraw.com\n// We don't want them to be used in open source\nconst removeStyleFromSvg_HACK = (svg) => {\n  const styleTag = svg?.firstElementChild?.firstElementChild;\n\n  // Generated SVG is getting double-sized by height and width attributes\n  // We want to match the real size of the SVG element\n  const viewBox = svg.getAttribute('viewBox');\n  if (viewBox != null) {\n    const viewBoxDimensions = viewBox.split(' ');\n    svg.setAttribute('width', viewBoxDimensions[2]);\n    svg.setAttribute('height', viewBoxDimensions[3]);\n  }\n\n  if (styleTag && styleTag.tagName === 'style') {\n    styleTag.remove();\n  }\n};\n\n/**\n * @explorer-desc\n * A component for rendering Excalidraw elements as a static image\n */\nexport default function ExcalidrawImage({ elements, files, imageContainerRef, appState, rootClassName = null }) {\n  const [Svg, setSvg] = useState(null);\n\n  useEffect(() => {\n    const setContent = async () => {\n      const svg = await exportToSvg({\n        appState,\n        elements,\n        files,\n      });\n      removeStyleFromSvg_HACK(svg);\n\n      svg.setAttribute('width', '100%');\n      svg.setAttribute('height', '100%');\n      svg.setAttribute('display', 'block');\n\n      setSvg(svg);\n    };\n    setContent();\n  }, [elements, files, appState]);\n\n  return (\n    <div\n      ref={imageContainerRef}\n      className={rootClassName ?? ''}\n      dangerouslySetInnerHTML={{ __html: Svg?.outerHTML ?? '' }}\n    />\n  );\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nimport './ExcalidrawModal.css';\n\nimport { Excalidraw } from '@excalidraw/excalidraw';\n\nimport * as React from 'react';\nimport { ReactPortal, useEffect, useLayoutEffect, useRef, useState } from 'react';\nimport { createPortal } from 'react-dom';\n\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\n\nexport const useCallbackRefState = () => {\n  const [refValue, setRefValue] = React.useState(null);\n  const refCallback = React.useCallback((value) => setRefValue(value), []);\n  return [refValue, refCallback];\n};\n\n/**\n * @explorer-desc\n * A component which renders a modal with Excalidraw (a painting app)\n * which can be used to export an editable image\n */\nexport default function ExcalidrawModal({\n  closeOnClickOutside = false,\n  onSave,\n  initialElements,\n  initialAppState,\n  initialFiles,\n  isShown = false,\n  onDelete,\n  onClose,\n}) {\n  const excaliDrawModelRef = useRef(null);\n  const [excalidrawAPI, excalidrawAPIRefCallback] = useCallbackRefState();\n  const [discardModalOpen, setDiscardModalOpen] = useState(false);\n  const [elements, setElements] = useState(initialElements);\n  const [files, setFiles] = useState(initialFiles);\n\n  useEffect(() => {\n    if (excaliDrawModelRef.current !== null) {\n      excaliDrawModelRef.current.focus();\n    }\n  }, []);\n\n  useEffect(() => {\n    let modalOverlayElement = null;\n\n    const clickOutsideHandler = (event) => {\n      const target = event.target;\n      if (excaliDrawModelRef.current !== null && !excaliDrawModelRef.current.contains(target) && closeOnClickOutside) {\n        onDelete();\n      }\n    };\n\n    if (excaliDrawModelRef.current !== null) {\n      modalOverlayElement = excaliDrawModelRef.current?.parentElement;\n      if (modalOverlayElement !== null) {\n        modalOverlayElement?.addEventListener('click', clickOutsideHandler);\n      }\n    }\n\n    return () => {\n      if (modalOverlayElement !== null) {\n        modalOverlayElement?.removeEventListener('click', clickOutsideHandler);\n      }\n    };\n  }, [closeOnClickOutside, onDelete]);\n\n  useLayoutEffect(() => {\n    const currentModalRef = excaliDrawModelRef.current;\n\n    const onKeyDown = (event) => {\n      if (event.key === 'Escape') {\n        onDelete();\n      }\n    };\n\n    if (currentModalRef !== null) {\n      currentModalRef.addEventListener('keydown', onKeyDown);\n    }\n\n    return () => {\n      if (currentModalRef !== null) {\n        currentModalRef.removeEventListener('keydown', onKeyDown);\n      }\n    };\n  }, [elements, files, onDelete]);\n\n  const save = () => {\n    if (elements.filter((el) => !el.isDeleted).length > 0) {\n      const appState = excalidrawAPI?.getAppState();\n      // We only need a subset of the state\n      const partialState = {\n        exportBackground: appState.exportBackground,\n        exportScale: appState.exportScale,\n        exportWithDarkMode: appState.theme === 'dark',\n        isBindingEnabled: appState.isBindingEnabled,\n        isLoading: appState.isLoading,\n        name: appState.name,\n        theme: appState.theme,\n        viewBackgroundColor: appState.viewBackgroundColor,\n        viewModeEnabled: appState.viewModeEnabled,\n        zenModeEnabled: appState.zenModeEnabled,\n        zoom: appState.zoom,\n      };\n      onSave(elements, partialState, files);\n    } else {\n      // delete node if the scene is clear\n      onDelete();\n    }\n  };\n\n  const discard = () => {\n    if (elements.filter((el) => !el.isDeleted).length === 0) {\n      // delete node if the scene is clear\n      onDelete();\n    } else {\n      //Otherwise, show confirmation dialog before closing\n      setDiscardModalOpen(true);\n    }\n  };\n\n  function ShowDiscardDialog() {\n    return (\n      <Modal\n        title=\"Discard\"\n        onClose={() => {\n          setDiscardModalOpen(false);\n        }}\n        closeOnClickOutside={false}\n      >\n        Are you sure you want to discard the changes?\n        <div className=\"ExcalidrawModal__discardModal\">\n          <Button\n            onClick={() => {\n              setDiscardModalOpen(false);\n              onClose();\n            }}\n          >\n            Discard\n          </Button>{' '}\n          <Button\n            onClick={() => {\n              setDiscardModalOpen(false);\n            }}\n          >\n            Cancel\n          </Button>\n        </div>\n      </Modal>\n    );\n  }\n\n  if (isShown === false) {\n    return null;\n  }\n\n  const onChange = (els, _, fls) => {\n    setElements(els);\n    setFiles(fls);\n  };\n\n  return createPortal(\n    <div className=\"ExcalidrawModal__overlay\" role=\"dialog\">\n      <div className=\"ExcalidrawModal__modal\" ref={excaliDrawModelRef} tabIndex={-1}>\n        <div className=\"ExcalidrawModal__row\">\n          {discardModalOpen && <ShowDiscardDialog />}\n          <Excalidraw\n            onChange={onChange}\n            excalidrawAPI={excalidrawAPIRefCallback}\n            initialData={{\n              appState: initialAppState || { isLoading: false },\n              elements: initialElements,\n              files: initialFiles,\n            }}\n          />\n          <div className=\"ExcalidrawModal__actions\">\n            <button className=\"action-button\" onClick={discard}>\n              Discard\n            </button>\n            <button className=\"action-button\" onClick={save}>\n              Save\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>,\n    document.body\n  );\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nimport { useLexicalComposerContext } from '@lexical/react/LexicalComposerContext';\nimport { useLexicalNodeSelection } from '@lexical/react/useLexicalNodeSelection';\nimport { mergeRegister } from '@lexical/utils';\nimport {\n  $getNodeByKey,\n  $getSelection,\n  $isNodeSelection,\n  CLICK_COMMAND,\n  COMMAND_PRIORITY_LOW,\n  KEY_BACKSPACE_COMMAND,\n  KEY_DELETE_COMMAND,\n} from 'lexical';\nimport { useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport * as React from 'react';\n\nimport ImageResizer from '../../ui/ImageResizer';\nimport { $isExcalidrawNode } from '.';\nimport ExcalidrawImage from './ExcalidrawImage';\nimport ExcalidrawModal from './ExcalidrawModal';\n\nexport default function ExcalidrawComponent({ nodeKey, data, height, width }) {\n  const [editor] = useLexicalComposerContext();\n  const [isModalOpen, setModalOpen] = useState(data === '[]' && editor.isEditable());\n  const imageContainerRef = useRef(null);\n  const buttonRef = useRef(null);\n  const captionButtonRef = useRef(null);\n  const [isSelected, setSelected, clearSelection] = useLexicalNodeSelection(nodeKey);\n  const [isResizing, setIsResizing] = useState(false);\n\n  /**\n   * PATCH to official implementation - react on sizes change from outside the node (remote changes)\n   */\n  useEffect(() => {\n    if (imageContainerRef && imageContainerRef.current) {\n      imageContainerRef.current.style.width = width === 'inherit' ? width : `${width}px`;\n      imageContainerRef.current.style.height = height === 'inherit' ? height : `${height}px`;\n    }\n  }, [height, width]);\n\n  const onDelete = useCallback(\n    (event) => {\n      if (isSelected && $isNodeSelection($getSelection())) {\n        event.preventDefault();\n        editor.update(() => {\n          const node = $getNodeByKey(nodeKey);\n          if ($isExcalidrawNode(node)) {\n            node.remove();\n          }\n        });\n      }\n      return false;\n    },\n    [editor, isSelected, nodeKey]\n  );\n\n  // Set editor to readOnly if excalidraw is open to prevent unwanted changes\n  useEffect(() => {\n    if (isModalOpen) {\n      editor.setEditable(false);\n    } else {\n      editor.setEditable(true);\n    }\n  }, [isModalOpen, editor]);\n\n  useEffect(() => {\n    return mergeRegister(\n      editor.registerCommand(\n        CLICK_COMMAND,\n        (event) => {\n          const buttonElem = buttonRef.current;\n          const eventTarget = event.target;\n\n          if (isResizing) {\n            return true;\n          }\n\n          if (buttonElem !== null && buttonElem.contains(eventTarget)) {\n            if (!event.shiftKey) {\n              clearSelection();\n            }\n            setSelected(!isSelected);\n            if (event.detail > 1) {\n              setModalOpen(true);\n            }\n            return true;\n          }\n\n          return false;\n        },\n        COMMAND_PRIORITY_LOW\n      ),\n      editor.registerCommand(KEY_DELETE_COMMAND, onDelete, COMMAND_PRIORITY_LOW),\n      editor.registerCommand(KEY_BACKSPACE_COMMAND, onDelete, COMMAND_PRIORITY_LOW)\n    );\n  }, [clearSelection, editor, isSelected, isResizing, onDelete, setSelected]);\n\n  const deleteNode = useCallback(() => {\n    setModalOpen(false);\n    return editor.update(() => {\n      const node = $getNodeByKey(nodeKey);\n      if ($isExcalidrawNode(node)) {\n        node.remove();\n      }\n    });\n  }, [editor, nodeKey]);\n\n  const setData = (els, aps, fls) => {\n    if (!editor.isEditable()) {\n      return;\n    }\n    return editor.update(() => {\n      const node = $getNodeByKey(nodeKey);\n      if ($isExcalidrawNode(node)) {\n        if (els.length > 0 || Object.keys(fls).length > 0) {\n          node.setData(\n            JSON.stringify({\n              appState: aps,\n              elements: els,\n              files: fls,\n            })\n          );\n        } else {\n          node.remove();\n        }\n      }\n    });\n  };\n\n  const onResizeStart = () => {\n    setIsResizing(true);\n  };\n\n  const onResizeEnd = (nextWidth, nextHeight) => {\n    // Delay hiding the resize bars for click case\n    setTimeout(() => {\n      setIsResizing(false);\n    }, 200);\n\n    editor.update(() => {\n      const node = $getNodeByKey(nodeKey);\n\n      if ($isExcalidrawNode(node)) {\n        node.setWidth(nextWidth);\n        node.setHeight(nextHeight);\n      }\n    });\n  };\n\n  const openModal = useCallback(() => {\n    setModalOpen(true);\n  }, []);\n\n  const { elements = [], files = {}, appState = {} } = useMemo(() => JSON.parse(data), [data]);\n\n  return (\n    <>\n      <ExcalidrawModal\n        initialElements={elements}\n        initialFiles={files}\n        initialAppState={appState}\n        isShown={isModalOpen}\n        onDelete={deleteNode}\n        onClose={() => setModalOpen(false)}\n        onSave={(els, aps, fls) => {\n          editor.setEditable(true);\n          setData(els, aps, fls);\n          setModalOpen(false);\n        }}\n        closeOnClickOutside={false}\n      />\n      {elements.length > 0 && (\n        <button ref={buttonRef} className={`excalidraw-button ${isSelected ? 'selected' : ''}`}>\n          <ExcalidrawImage\n            imageContainerRef={imageContainerRef}\n            className=\"image\"\n            elements={elements}\n            files={files}\n            appState={appState}\n          />\n          {isSelected && (\n            <div\n              className=\"image-edit-button\"\n              role=\"button\"\n              tabIndex={0}\n              onMouseDown={(event) => event.preventDefault()}\n              onClick={openModal}\n            />\n          )}\n          {(isSelected || isResizing) && (\n            <ImageResizer\n              buttonRef={captionButtonRef}\n              showCaption={true}\n              setShowCaption={() => null}\n              imageRef={imageContainerRef}\n              editor={editor}\n              onResizeStart={onResizeStart}\n              onResizeEnd={onResizeEnd}\n              captionsEnabled={true}\n            />\n          )}\n        </button>\n      )}\n    </>\n  );\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\nimport * as React from 'react';\nimport { useRef } from 'react';\n\nfunction clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n\nconst Direction = {\n  east: 1 << 0,\n  north: 1 << 3,\n  south: 1 << 1,\n  west: 1 << 2,\n};\n\nexport default function ImageResizer({\n  onResizeStart,\n  onResizeEnd,\n  buttonRef,\n  imageRef,\n  maxWidth,\n  editor,\n  showCaption,\n  setShowCaption,\n  captionsEnabled,\n}) {\n  const controlWrapperRef = useRef(null);\n  const userSelect = useRef({\n    priority: '',\n    value: 'default',\n  });\n  const positioningRef = useRef({\n    currentHeight: 0,\n    currentWidth: 0,\n    direction: 0,\n    isResizing: false,\n    ratio: 0,\n    startHeight: 0,\n    startWidth: 0,\n    startX: 0,\n    startY: 0,\n  });\n  const editorRootElement = editor.getRootElement();\n  // Find max width, accounting for editor padding.\n  const maxWidthContainer = maxWidth\n    ? maxWidth\n    : editorRootElement !== null\n    ? editorRootElement.getBoundingClientRect().width - 20\n    : 100;\n  const maxHeightContainer = editorRootElement !== null ? editorRootElement.getBoundingClientRect().height - 20 : 100;\n\n  const minWidth = 100;\n  const minHeight = 100;\n\n  const setStartCursor = (direction) => {\n    const ew = direction === Direction.east || direction === Direction.west;\n    const ns = direction === Direction.north || direction === Direction.south;\n    const nwse =\n      (direction & Direction.north && direction & Direction.west) ||\n      (direction & Direction.south && direction & Direction.east);\n\n    const cursorDir = ew ? 'ew' : ns ? 'ns' : nwse ? 'nwse' : 'nesw';\n\n    if (editorRootElement !== null) {\n      editorRootElement.style.setProperty('cursor', `${cursorDir}-resize`, 'important');\n    }\n    if (document.body !== null) {\n      document.body.style.setProperty('cursor', `${cursorDir}-resize`, 'important');\n      userSelect.current.value = document.body.style.getPropertyValue('-webkit-user-select');\n      userSelect.current.priority = document.body.style.getPropertyPriority('-webkit-user-select');\n      document.body.style.setProperty('-webkit-user-select', `none`, 'important');\n    }\n  };\n\n  const setEndCursor = () => {\n    if (editorRootElement !== null) {\n      editorRootElement.style.setProperty('cursor', 'text');\n    }\n    if (document.body !== null) {\n      document.body.style.setProperty('cursor', 'default');\n      document.body.style.setProperty('-webkit-user-select', userSelect.current.value, userSelect.current.priority);\n    }\n  };\n\n  const handlePointerDown = (event, direction) => {\n    if (!editor.isEditable()) {\n      return;\n    }\n\n    const image = imageRef.current;\n    const controlWrapper = controlWrapperRef.current;\n\n    if (image !== null && controlWrapper !== null) {\n      event.preventDefault();\n      const { width, height } = image.getBoundingClientRect();\n      const positioning = positioningRef.current;\n      positioning.startWidth = width;\n      positioning.startHeight = height;\n      positioning.ratio = width / height;\n      positioning.currentWidth = width;\n      positioning.currentHeight = height;\n      positioning.startX = event.clientX;\n      positioning.startY = event.clientY;\n      positioning.isResizing = true;\n      positioning.direction = direction;\n\n      setStartCursor(direction);\n      onResizeStart();\n\n      controlWrapper.classList.add('image-control-wrapper--resizing');\n      image.style.height = `${height}px`;\n      image.style.width = `${width}px`;\n\n      document.addEventListener('pointermove', handlePointerMove);\n      document.addEventListener('pointerup', handlePointerUp);\n    }\n  };\n  const handlePointerMove = (event) => {\n    const image = imageRef.current;\n    const positioning = positioningRef.current;\n\n    const isHorizontal = positioning.direction & (Direction.east | Direction.west);\n    const isVertical = positioning.direction & (Direction.south | Direction.north);\n\n    if (image !== null && positioning.isResizing) {\n      // Corner cursor\n      if (isHorizontal && isVertical) {\n        let diff = Math.floor(positioning.startX - event.clientX);\n        diff = positioning.direction & Direction.east ? -diff : diff;\n\n        const width = clamp(positioning.startWidth + diff, minWidth, maxWidthContainer);\n\n        const height = width / positioning.ratio;\n        image.style.width = `${width}px`;\n        image.style.height = `${height}px`;\n        positioning.currentHeight = height;\n        positioning.currentWidth = width;\n      } else if (isVertical) {\n        let diff = Math.floor(positioning.startY - event.clientY);\n        diff = positioning.direction & Direction.south ? -diff : diff;\n\n        const height = clamp(positioning.startHeight + diff, minHeight, maxHeightContainer);\n\n        image.style.height = `${height}px`;\n        positioning.currentHeight = height;\n      } else {\n        let diff = Math.floor(positioning.startX - event.clientX);\n        diff = positioning.direction & Direction.east ? -diff : diff;\n\n        const width = clamp(positioning.startWidth + diff, minWidth, maxWidthContainer);\n\n        image.style.width = `${width}px`;\n        positioning.currentWidth = width;\n      }\n    }\n  };\n  const handlePointerUp = () => {\n    const image = imageRef.current;\n    const positioning = positioningRef.current;\n    const controlWrapper = controlWrapperRef.current;\n    if (image !== null && controlWrapper !== null && positioning.isResizing) {\n      const width = positioning.currentWidth;\n      const height = positioning.currentHeight;\n      positioning.startWidth = 0;\n      positioning.startHeight = 0;\n      positioning.ratio = 0;\n      positioning.startX = 0;\n      positioning.startY = 0;\n      positioning.currentWidth = 0;\n      positioning.currentHeight = 0;\n      positioning.isResizing = false;\n\n      controlWrapper.classList.remove('image-control-wrapper--resizing');\n\n      setEndCursor();\n      onResizeEnd(width, height);\n\n      document.removeEventListener('pointermove', handlePointerMove);\n      document.removeEventListener('pointerup', handlePointerUp);\n    }\n  };\n  return (\n    <div ref={controlWrapperRef}>\n      {!showCaption && captionsEnabled && (\n        <button\n          className=\"image-caption-button\"\n          ref={buttonRef}\n          onClick={() => {\n            setShowCaption(!showCaption);\n          }}\n        >\n          Add Caption\n        </button>\n      )}\n      <div\n        className=\"image-resizer image-resizer-n\"\n        onPointerDown={(event) => {\n          handlePointerDown(event, Direction.north);\n        }}\n      />\n      <div\n        className=\"image-resizer image-resizer-ne\"\n        onPointerDown={(event) => {\n          handlePointerDown(event, Direction.north | Direction.east);\n        }}\n      />\n      <div\n        className=\"image-resizer image-resizer-e\"\n        onPointerDown={(event) => {\n          handlePointerDown(event, Direction.east);\n        }}\n      />\n      <div\n        className=\"image-resizer image-resizer-se\"\n        onPointerDown={(event) => {\n          handlePointerDown(event, Direction.south | Direction.east);\n        }}\n      />\n      <div\n        className=\"image-resizer image-resizer-s\"\n        onPointerDown={(event) => {\n          handlePointerDown(event, Direction.south);\n        }}\n      />\n      <div\n        className=\"image-resizer image-resizer-sw\"\n        onPointerDown={(event) => {\n          handlePointerDown(event, Direction.south | Direction.west);\n        }}\n      />\n      <div\n        className=\"image-resizer image-resizer-w\"\n        onPointerDown={(event) => {\n          handlePointerDown(event, Direction.west);\n        }}\n      />\n      <div\n        className=\"image-resizer image-resizer-nw\"\n        onPointerDown={(event) => {\n          handlePointerDown(event, Direction.north | Direction.west);\n        }}\n      />\n    </div>\n  );\n}\n"],"names":["removeStyleFromSvg_HACK","svg","_svg$firstElementChil","styleTag","firstElementChild","viewBox","getAttribute","viewBoxDimensions","split","setAttribute","tagName","remove","ExcalidrawImage","_ref","_Svg$outerHTML","elements","files","imageContainerRef","appState","rootClassName","Svg","setSvg","useState","useEffect","async","exportToSvg","setContent","_jsx","ref","className","dangerouslySetInnerHTML","__html","outerHTML","useCallbackRefState","refValue","setRefValue","React","value","ExcalidrawModal","closeOnClickOutside","onSave","initialElements","initialAppState","initialFiles","isShown","onDelete","onClose","excaliDrawModelRef","useRef","excalidrawAPI","excalidrawAPIRefCallback","discardModalOpen","setDiscardModalOpen","setElements","setFiles","current","focus","modalOverlayElement","clickOutsideHandler","event","target","contains","_excaliDrawModelRef$c","_modalOverlayElement","parentElement","addEventListener","_modalOverlayElement2","removeEventListener","useLayoutEffect","currentModalRef","onKeyDown","key","ShowDiscardDialog","_jsxs","Modal","title","children","Button","onClick","createPortal","role","tabIndex","Excalidraw","onChange","els","_","fls","initialData","isLoading","discard","filter","el","isDeleted","length","save","getAppState","partialState","exportBackground","exportScale","exportWithDarkMode","theme","isBindingEnabled","name","viewBackgroundColor","viewModeEnabled","zenModeEnabled","zoom","document","body","ExcalidrawComponent","nodeKey","data","height","width","editor","useLexicalComposerContext","isModalOpen","setModalOpen","isEditable","buttonRef","captionButtonRef","isSelected","setSelected","clearSelection","useLexicalNodeSelection","isResizing","setIsResizing","style","useCallback","$isNodeSelection","$getSelection","preventDefault","update","node","$getNodeByKey","$isExcalidrawNode","setEditable","mergeRegister","registerCommand","CLICK_COMMAND","buttonElem","eventTarget","shiftKey","detail","COMMAND_PRIORITY_LOW","KEY_DELETE_COMMAND","KEY_BACKSPACE_COMMAND","deleteNode","openModal","useMemo","JSON","parse","_Fragment","aps","setData","Object","keys","stringify","onMouseDown","ImageResizer","showCaption","setShowCaption","imageRef","onResizeStart","onResizeEnd","nextWidth","nextHeight","setTimeout","setWidth","setHeight","captionsEnabled","clamp","min","max","Math","Direction","east","north","south","west","maxWidth","controlWrapperRef","userSelect","priority","positioningRef","currentHeight","currentWidth","direction","ratio","startHeight","startWidth","startX","startY","editorRootElement","getRootElement","maxWidthContainer","getBoundingClientRect","maxHeightContainer","handlePointerDown","image","controlWrapper","positioning","clientX","clientY","ew","ns","nwse","cursorDir","setProperty","getPropertyValue","getPropertyPriority","setStartCursor","classList","add","handlePointerMove","handlePointerUp","isHorizontal","isVertical","diff","floor","onPointerDown"],"sourceRoot":""}